{:base-config
 {:blaze.db.kv.rocksdb/block-cache
  {:size-in-mb #blaze/cfg ["DB_BLOCK_CACHE_SIZE" int? 128]}

  :blaze.db.kv.rocksdb/stats
  {}

  :blaze.db.kv.rocksdb/stats-collector
  {:stats #blaze/ref :blaze.db.kv.rocksdb/stats}

  [:blaze.db.kv/rocksdb :blaze.db/kv-store]
  {:dir #blaze/cfg ["DB_DIR" string? "db"]
   :block-cache #blaze/ref :blaze.db.kv.rocksdb/block-cache
   :stats #blaze/ref :blaze.db.kv.rocksdb/stats
   :opts
   {:max-background-jobs
    #blaze/cfg ["DB_MAX_BACKGROUND_JOBS" int? 4]
    :compaction-readahead-size
    #blaze/cfg ["DB_COMPACTION_READAHEAD_SIZE" int? 0]}
   :column-families
   {:search-param-value-index                               ; 110 GB
    {:write-buffer-size-in-mb 128
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 256
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :resource-value-index                                   ; 32 GB
    {:write-buffer-size-in-mb 128
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 256
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :compartment-search-param-value-index
    {:write-buffer-size-in-mb 128
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 256
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :compartment-resource-value-index
    {:write-buffer-size-in-mb 128
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 256
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :resource-type-index                                    ; 9 GB
    {:write-buffer-size-in-mb 64
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 128
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :compartment-resource-type-index
    {:write-buffer-size-in-mb 64
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 128
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :resource-index
    {:write-buffer-size-in-mb 128
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :min-write-buffer-number-to-merge 2
     :max-bytes-for-level-base-in-mb 256
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]
     :bloom-filter? true}

    :active-search-params
    {:block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :tx-success-index                                       ; 2 MB
    {:write-buffer-size-in-mb 4
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 8
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :tx-error-index
    {:write-buffer-size-in-mb 4
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 8
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :t-by-instant-index                                     ; 2 MB
    {:write-buffer-size-in-mb 4
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 8
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :resource-as-of-index                                   ; 30 GB
    {:write-buffer-size-in-mb 128
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 256
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :type-as-of-index                                       ; 10 GB
    {:write-buffer-size-in-mb 64
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 128
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :system-as-of-index                                     ; 10 GB
    {:write-buffer-size-in-mb 64
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 128
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :type-stats-index                                       ; 10 MB
    {:write-buffer-size-in-mb 4
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 8
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}

    :system-stats-index
    {:write-buffer-size-in-mb 4
     :max-write-buffer-number 4
     :level0-file-num-compaction-trigger 2
     :max-bytes-for-level-base-in-mb 8
     :block-size #blaze/cfg ["DB_BLOCK_SIZE" int? 16384]}}}

  :blaze.db.indexer.resource/executor
  {:num-threads #blaze/cfg ["DB_RESOURCE_INDEXER_THREADS" int? 4]}

  :blaze.db.indexer/resource
  {:search-param-registry #blaze/ref :blaze.db/search-param-registry
   :kv-store #blaze/ref :blaze.db/kv-store
   :executor #blaze/ref :blaze.db.indexer.resource/executor}

  :blaze.db.indexer.resource/duration-seconds {}

  :blaze.db.indexer/tx
  {:kv-store #blaze/ref :blaze.db/kv-store}

  :blaze.db.indexer.tx/duration-seconds {}

  :blaze.db.tx-log/local
  {:resource-indexer #blaze/ref :blaze.db.indexer/resource
   :resource-indexer-batch-size #blaze/cfg ["DB_RESOURCE_INDEXER_BATCH_SIZE" int? 1]
   :tx-indexer #blaze/ref :blaze.db.indexer/tx}

  :blaze.db.tx-log.local/duration-seconds {}

  :blaze.interaction.history/system
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction.history/type
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction.history/instance
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction/create
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction/delete
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction/read
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction/search-type
  {:node #blaze/ref :blaze.db/node}

  :blaze.interaction.transaction/executor {}

  :blaze.interaction.transaction/handler
  {:node #blaze/ref :blaze.db/node
   :executor #blaze/ref :blaze.interaction.transaction/executor}

  :blaze.interaction/update
  {:node #blaze/ref :blaze.db/node}

  :blaze.fhir.operation.evaluate-measure/executor
  {:num-threads #blaze/cfg ["FHIR_OPERATION_EVALUATE_MEASURE_THREADS" int? 4]}

  :blaze.fhir.operation.evaluate-measure/handler
  {:node #blaze/ref :blaze.db/node
   :executor #blaze/ref :blaze.fhir.operation.evaluate-measure/executor}

  :blaze.fhir.operation.evaluate-measure/compile-duration-seconds {}
  :blaze.fhir.operation.evaluate-measure/evaluate-duration-seconds {}

  :blaze/rest-api
  {:transaction-handler #blaze/ref :blaze.interaction.transaction/handler
   :history-system-handler #blaze/ref :blaze.interaction.history/system
   :resource-patterns
   [#:blaze.rest-api.resource-pattern
       {:type :default
        :interactions
        {:read
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction/read}
         :vread
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction/read}
         :update
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction/update}
         :delete
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction/delete}
         :history-instance
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction.history/instance}
         :history-type
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction.history/type}
         :create
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction/create}
         :search-type
         #:blaze.rest-api.interaction
             {:handler #blaze/ref :blaze.interaction/search-type}}}]
   :operations
   [#:blaze.rest-api.operation
       {:code "evaluate-measure"
        :def-uri "http://hl7.org/fhir/OperationDefinition/Measure-evaluate-measure"
        :resource-types ["Measure"]
        :type-handler #blaze/ref :blaze.fhir.operation.evaluate-measure/handler
        :instance-handler #blaze/ref :blaze.fhir.operation.evaluate-measure/handler}]}}

 :features
 [{:name "OpenID Authentication"
   :toggle "OPENID_PROVIDER_URL"
   :config
   {[:blaze.auth/backend :blaze.openid-auth/backend]
    {:openid-provider/url #blaze/cfg ["OPENID_PROVIDER_URL" string?]}}}]}
